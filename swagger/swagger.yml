openapi: 3.0.0
info:
  title: I1820 API
  description: I1820, IoT Platform that can be used with LoRa, Zigbee and ... . Supported by Avidnet Technology.
  version: "3.0.0"

servers:
  - url: /api/v1

tags:
  - name: auth
    description: User registration and authorization
  - name: projects
    description: The way you can manage user's projects
  - name: things
    description: The way you can manage project's thing

security:
  - i1820Auth: []

paths:
  /projects/{id}/things:
    get:
      summary: lists project's thing
      parameters:
        - in: path
          name: id
          description: project identification
          required: true
          schema:
            type: string
      tags:
        - things
      responses:
        '200':
          description: "Things list is ready"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Thing"

  /projects/{id}:
    get:
      summary: shows given project details
      parameters:
        - in: path
          name: id
          description: project identification
          required: true
          schema:
            type: string
      tags:
        - projects
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "Project details is ready"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /projects:
    get:
      summary: lists user's projects
      tags:
        - projects
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "Projects list is ready"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: creates new project and if it successful then adds newly created project to user projects
      tags:
        - projects
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "Create project successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "hello"
                envs:
                  type: object
                  additionalProperties:
                    type: string
  /auth/refresh:
    post:
      summary: refreshes given token with new expiration time.
      tags:
        - auth
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "New access token"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
  /auth/register:
    post:
      summary: creates new user with given information and stores it in database.
      tags:
        - auth
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "Successfull registration"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  example: "پرهام"
                  type: string
                lastname:
                  example: "الوانی"
                  type: string
                username:
                  example: "1995parham"
                  type: string
                email:
                  example: "parham.alvani@gmail.com"
                  type: string
                  format: email
                password:
                  example: "123123"
                  type: string
  /auth/login:
    post:
      summary: checks given credentials and generate jwt token
      tags:
        - auth
      responses:
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: "Logged in successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  example: "1995parham"
                  type: string
                password:
                  example: "123123"
                  type: string
                remember:
                  example: false
                  type: boolean

components:
  securitySchemes:
    i1820Auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Asset:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
        king:
          type: string
    Thing:
      type: object
      properties:
        project:
          type: string
        assets:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Asset"
    Error:
      type: object
      properties:
        error:
          type: string
        trace:
          type: string
        code:
          type: number
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
        access_token:
          type: string
        refresh_token:
          type: string
        projects:
          type: array
          items:
            type: string
